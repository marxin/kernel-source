# Here all the valid metadata tags for suse patches are recorded.  Patches
# in the SUSE kernel repository must have a Subject tag, and there must
# be a suse or novell email address in a From:, Signed-off-by: or Acked-by:
# tag.
#
# Every patch in the SUSE repository must have a descriptive comment in
# addition to any tags present
#
# The original patch author
#
From: mliska@suse.cz

# a brief one line description of the patch
#
Subject: HSA: dump virtual address for SIGSEGV event

# Signed off by means that you have reviewed the patch for correctness
# Multiple signed-off-by tags are allowed
#
Signed-off-by: mliska@suse.cz

# Acked-by is not as strong as signed-off-by.  This would be used when
# the patch has already been signed off by someone you trust.
# Multiple acked-by tags are allowed
#
Acked-by:  mliska@suse.cz

# Patch-mainline indicates which version of Linus' kernel includes the patch.
# Patch-mainline has a few special values for the first word of the tag.  
# These are used by scripts to check on the status of patches in the 
# repository, reminding us to send them into mainline.
#
# "never" indicates the patch will never be sent to mainline.  A short 
# explanation should follow
#
# "submitted yyyy-mm-dd" gives the date the patch was sent for inclusion.
#
# examples:
# Patch-mainline: never.  fixes bugs in SUSE specific code
# Patch-mainline: submitted 2004-11-01
# Patch-mainline: 2.6.10-rc1 any free form text is valid after the version
#
Patch-mainline: 4.0

# bug numbers corresponding to this patch.  Any bugzilla database other
# then SUSE needs to have ids qualified by some string (ie LTC11210)
# Multiple bug numbers should be put into a single tag:
# References: 32768 LTC1002 OSDL3080
#


diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_events.c b/drivers/gpu/drm/amd/amdkfd/kfd_events.c
index 98c48ce..c65a36b 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_events.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_events.c
@@ -936,9 +936,13 @@ static void lookup_events_by_type_and_signal(struct kfd_process *p,
 	}
 
 	if (type == KFD_EVENT_TYPE_MEMORY) {
+		struct kfd_hsa_memory_exception_data *edata = (struct kfd_hsa_memory_exception_data *)event_data;
+
 		dev_warn(kfd_device,
 			"Sending SIGSEGV to HSA Process with PID %d ",
 				p->lead_thread->pid);
+		if (edata)
+		  dev_warn(kfd_device, "virtual address: 0x%08lx\n", edata->va);
 		send_sig(SIGSEGV, p->lead_thread, 0);
 	}
 
